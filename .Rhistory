0.2^3
0.2^3
0.2*0.2*0.8
0.2*0.2*0.8
0.2*0.2*0.8
0.2*0.8*0.8
0.2*0.8*0.8
0.2*0.8*0.8
0.8^3
sum(c(0.2^3,
0.2*0.2*0.8,
0.2*0.2*0.8,
0.2*0.2*0.8,
0.2*0.8*0.8,
0.2*0.8*0.8,
0.2*0.8*0.8,
0.8^3))
0.2/0.8
0.9^15
(1*0.2)+(1.1*0.3)+(1.2*0.2)+(1.3*0.2)+(1.4*0.1)
c = c(1,1.1,1.2,1.3,1.4)
p + (0.5*p)
c = c(1,1.1,1.2,1.3,1.4)
p = c(0.2,0.3,0.2,0.2,0.1)
p + (0.5*p)
p + (0.5*p) + 0.1
c + (0.5*c) + 0.1
(1.6*0.2)+(1.75*0.3)+(1.9*0.2)+(2.05*0.2)+(2.2*0.1)
1.9+1.75
3.65/2
1/2+1/4+3/16+4/16
f = 0:4
p = c(1/4,1/2,1/8,1/16,1/16)
sum(p)
f*p
sum(f*p)
(f - sum(f*p))^2*p
sum((f - sum(f*p))^2*p)
(-20/6)+(5/6)
f = c(-5,0,5)
f = c(-5,0,5)
p = c(4/6,1/6,1/6)
sum((f - sum(f*p))^2*p)
f
p
sum(f*p)
f - sum(f*p)
sum((f - sum(f*p))^2*p)
0.9*0.8*0.7
0.1*0.2*0.3
0.1*0.8*0.3
0.9*0.2*0.3
0.1*0.8*0.7
0.9*0.2*0.7
0.9*0.8*0.3
0.9*0+8*0.7
0.9*0.8*0.7
0.1*0.2*0.3+
0.1*0.2*0.3+
0.1*0.8*0.3+
0.9*0.2*0.3+
0.1*0.8*0.7+
0.9*0.2*0.7+
0.9*0.8*0.3+
0.9*0.8*0.7
0.1*0.2*0.3+
0.1*0.2*0.7+
0.1*0.8*0.3+
0.9*0.2*0.3+
0.1*0.8*0.7+
0.9*0.2*0.7+
0.9*0.8*0.3+
0.9*0.8*0.7
0.1*0.2*0.7
0.056+0.126+0.216
0.014+0.024+0.054
398+92+14
0.504+0.398
0.092+0.006
902+98
1-0.504
12/52
4/8+2/4
c(0,1/8,2/8,1/8)
c(0,1/8,2/8,1/8)/1/2
sum(c(0,1/8,2/8,1/8)/1/2)
4/8
c(0,1/8,2/8,1/8)/1/2
1/4
x = c(0,1/8,2/8,1/8)/1/2
x = 0:3
p_x_inter_y1 = c(0,1/8,2/8,1/8)
x = 0:3
p_x_inter_y1 = c(0,1/8,2/8,1/8)
py1 = 1/2
p_x_inter_y1/py1
py1
p_x_inter_y1
sum(p_x_inter_y1/py1)
setwd("~/CE009ELTA")
rmarkdown::render_site()
setwd("~/CE009CS")
rmarkdown::render_site()
1/8
dbinom(10, 10, 0.7)
dbinom(1, 10, 0.7)
dbinom(3, 10, 0.7)
dbinom(6:8, 10, 0.7)
sum(dbinom(6:8, 10, 0.7))
rmarkdown::render_site()
?tinytex::parse_install()
tinytex::parse_install('! LaTeX Error: File `ragged2e.sty' not found.')
tinytex::parse_packages("filename.log")
tinytex::install_tinytex()
library(ggplot2)
library(plotly)
x <- rnorm(100)
y <- rnorm(100)
ggplot(mapping = aes(x=x, y=y))
ggplot(mapping = aes(x=x, y=y)) + geom_point()
library(ggplot2)
library(plotly)
v1 = rnorm(1500, 20, 5)
v2 = rnorm(1500, 20, 5 )
x = v1*2
y = v1+v2
z = as.factor(rep(c('a','b'), 750))
df <- data.frame(x=x,y=y,z=z)
head(df)
ggplot(mapping = aes(x=x, y=y, col = z)) + geom_point()
g <- ggplot(mapping = aes(x=x, y=y, col = z)) + geom_point()
ggplotly(g)
ggplotly(g)
### Medidas de posição
posicao <- function(vetor){
table <- data.frame(Minimo = quantile(vetor, na.rm = T)[1],
Quartil_1 = quantile(vetor, na.rm = T)[2],
Media = mean(vetor, na.rm = T),
Mediana = quantile(vetor, na.rm = T)[3],
Quartil_3 = quantile(vetor, na.rm = T)[4],
Maximo = quantile(vetor, na.rm = T)[5])
row.names(table) <- NULL
names(table) <- c('Mínimo', 'Q1', 'Média', 'Mediana', 'Q3', 'Máximo')
table
}
#----------------------------------------------------------------------
### Medidas de dispersao
dispersao <- function(vetor){
table <- data.frame(Amplitude = diff(range(vetor, na.rm = T)),
Variancia = var(vetor, na.rm = T),
Desvio_padrao = sd(vetor, na.rm = T)#,
#Coef_variacao = 100*sd(vetor)/mean(vetor)
)
names(table) <- c('Amplitude', 'Variância', 'Desvio padrão')
table
}
#----------------------------------------------------------------------
notas <- readxl::read_xls('notas-chamada.xls')
DT::datatable(notas[,c('GRR', 'FALTAS', 'PROVA 1', 'REMOTA 1')],
class = 'cell-border stripe',
rownames = F,
#filter = 'top',
editable = T
)
pander::pander(posicao(notas$`PROVA 1`))
pander::pander(dispersao(notas$`PROVA 1`))
library(ggplot2)
library(ggpubr)
p1 = ggplot(notas) +
geom_histogram(aes(x=`PROVA 1`,
y=..density..),
position="identity",
col = 1,
lwd = 1,
breaks = seq(0,10,0.5)) +
geom_density(aes(x=`PROVA 1`,
y=..density..),
col = 4,
lwd = 1) +
ylab("Densidade") +
xlab("") +
ggtitle("Prova 1")+
theme_classic() + theme(legend.position = 'none',
plot.title = element_text(family = "Helvetica",
face = "bold",
size = (20),
hjust = 0.5),
axis.title = element_text(face = "bold",
size = 15),
text = element_text(size=15))
p2 = ggplot(data = notas,
mapping = aes(y=`PROVA 1`, x='1')) +
stat_boxplot(geom ='errorbar')+
geom_boxplot(alpha = 1)+
#xlim(c(0,10)) +
stat_summary(fun.y=mean,
geom="point",
shape=20,
size=3,
color="red",
fill="red")+
ylab("Notas") +
xlab("") +
#ggtitle("Titulo")+
scale_y_continuous(limits = c(0, 10))+
theme_classic() + theme(legend.position = 'none',
plot.title = element_text(family = "Helvetica",
face = "bold",
size = (20),
hjust = 0.5),
axis.title = element_text(face = "bold",
size = 15),
axis.text.y=element_blank(),
text = element_text(size=15)) +coord_flip()
ggarrange(p1, p2,
heights = c(2, 1),
align = "hv",
ncol = 1,
nrow = 2)
pander::pander(posicao(notas$`REMOTA 1`))
pander::pander(dispersao(notas$`REMOTA 1`))
library(ggplot2)
library(ggpubr)
p1 = ggplot(notas) +
geom_histogram(aes(x=`REMOTA 1`,
y=..density..),
position="identity",
col = 1,
lwd = 1,
breaks = seq(0,10,0.5)) +
geom_density(aes(x=`REMOTA 1`,
y=..density..),
col = 4,
lwd = 1) +
ylab("Densidade") +
xlab("") +
ggtitle("REMOTA 1")+
theme_classic() + theme(legend.position = 'none',
plot.title = element_text(family = "Helvetica",
face = "bold",
size = (20),
hjust = 0.5),
axis.title = element_text(face = "bold",
size = 15),
text = element_text(size=15))
p2 = ggplot(data = notas,
mapping = aes(y=`REMOTA 1`, x='1')) +
stat_boxplot(geom ='errorbar')+
geom_boxplot(alpha = 1)+
#xlim(c(0,10)) +
stat_summary(fun.y=mean,
geom="point",
shape=20,
size=3,
color="red",
fill="red")+
ylab("Notas") +
xlab("") +
#ggtitle("Titulo")+
scale_y_continuous(limits = c(0, 10))+
theme_classic() + theme(legend.position = 'none',
plot.title = element_text(family = "Helvetica",
face = "bold",
size = (20),
hjust = 0.5),
axis.title = element_text(face = "bold",
size = 15),
axis.text.y=element_blank(),
text = element_text(size=15)) +coord_flip()
ggarrange(p1, p2,
heights = c(2, 1),
align = "hv",
ncol = 1,
nrow = 2)
pander::pander(posicao(notas$`REMOTA 2`))
pander::pander(dispersao(notas$`REMOTA 2`))
library(ggplot2)
library(ggpubr)
p1 = ggplot(notas) +
geom_histogram(aes(x=`REMOTA 2`,
y=..density..),
position="identity",
col = 1,
lwd = 1,
breaks = seq(0,10,0.5)) +
geom_density(aes(x=`REMOTA 2`,
y=..density..),
col = 4,
lwd = 1) +
ylab("Densidade") +
xlab("") +
ggtitle("REMOTA 2")+
theme_classic() + theme(legend.position = 'none',
plot.title = element_text(family = "Helvetica",
face = "bold",
size = (20),
hjust = 0.5),
axis.title = element_text(face = "bold",
size = 15),
text = element_text(size=15))
p2 = ggplot(data = notas,
mapping = aes(y=`REMOTA 2`, x='1')) +
stat_boxplot(geom ='errorbar')+
geom_boxplot(alpha = 1)+
#xlim(c(0,10)) +
stat_summary(fun.y=mean,
geom="point",
shape=20,
size=3,
color="red",
fill="red")+
ylab("Notas") +
xlab("") +
#ggtitle("Titulo")+
scale_y_continuous(limits = c(0, 10))+
theme_classic() + theme(legend.position = 'none',
plot.title = element_text(family = "Helvetica",
face = "bold",
size = (20),
hjust = 0.5),
axis.title = element_text(face = "bold",
size = 15),
axis.text.y=element_blank(),
text = element_text(size=15)) +coord_flip()
ggarrange(p1, p2,
heights = c(2, 1),
align = "hv",
ncol = 1,
nrow = 2)
notas <- readxl::read_xls('notas-chamada.xls')
DT::datatable(notas[,c('GRR', 'FALTAS', 'PROVA 1',
'REMOTA 1', 'REMOTA 2')],
class = 'cell-border stripe',
rownames = F,
#filter = 'top',
editable = T
)
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
18*0.5
